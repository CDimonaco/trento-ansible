# code: language=ansible
---
- name: Install thirdparties
  hosts: all
  become: true
  tasks:
   - name: Install python prerequisites
     community.general.zypper:
      name:
       - python3-setuptools
       - python3-pip
      state: present
      update_cache: true

   - name: Install erlang
     community.general.zypper:
      name: erlang
      state: present
      update_cache: true

   - name: Install rabbitmq
     community.general.zypper:
      name: rabbitmq-server
      state: present
      update_cache: true

   - name: Install postgresql
     community.general.zypper:
      name:
       - postgresql
       - postgresql-server
       - postgresql-server-devel
       - postgresql-contrib
      state: present
      update_cache: true

   - name: Install postgres python management deps
     ansible.builtin.pip:
      name:
       - psycopg2-binary
      state: present

   - name: Install docker
     community.general.zypper:
      name: docker
      state: present
      update_cache: true

   - name: Start postgresql service
     ansible.builtin.service:
      name: postgresql
      state: started
      enabled: true

   - name: Start rabbitmq service
     ansible.builtin.service:
      name: rabbitmq-server
      state: started
      enabled: true

   - name: Start docker service
     ansible.builtin.service:
      name: docker
      state: started
      enabled: true

- name: Configure rabbitmq
  hosts: all
  become: true
  vars:
   trento_rabbit_username: trento
   trento_rabbit_password: trento
  tasks:
   - name: Configure rabbitmq trento user
     community.rabbitmq.rabbitmq_user:
      user: "{{ trento_rabbit_username }}"
      password: "{{ trento_rabbit_password }}"


- name: Configure postgres
  become: true
  hosts: all
  become_user: postgres
  vars:
   trento_web_postgres_db: webdb
   trento_web_postgres_user: web
   trento_web_postgres_password: pass
   trento_wanda_postgres_user: wanda
   trento_wanda_postgres_password: wanda
   trento_wanda_postgres_db: wandadb
   ansible_ssh_pipelining: true
  tasks:
   - name: Create postgres web database
     community.postgresql.postgresql_db:
      name: "{{ trento_web_postgres_db }}"
      state: present
   - name: Create postgres wanda database
     community.postgresql.postgresql_db:
      name: "{{ trento_wanda_postgres_db }}"
      state: present

   - name: Create web database user
     community.postgresql.postgresql_user:
      db: "{{ trento_web_postgres_db }}"
      name: "{{ trento_web_postgres_user }}"
      password: "{{ trento_web_postgres_password }}"
      comment: "Web user provisioned by playbook"
      state: present
   - name: Create wanda database user
     community.postgresql.postgresql_user:
      db: "{{ trento_wanda_postgres_db }}"
      name: "{{ trento_wanda_postgres_user }}"
      password: "{{ trento_wanda_postgres_password }}"
      comment: "Wanda user provisioned by playbook"
      state: present

   - name: Grant privilegies to the web user for the web database
     community.postgresql.postgresql_privs:
      db: "{{ trento_web_postgres_db }}"
      roles: "{{ trento_web_postgres_user }}"
      privs: ALL
      type: database
      state: present
   - name: Grant privilegies to the wanda user for the wanda database
     community.postgresql.postgresql_privs:
      db: "{{ trento_wanda_postgres_db }}"
      roles: "{{ trento_wanda_postgres_user }}"
      privs: ALL
      type: database
      state: present
